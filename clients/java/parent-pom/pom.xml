<?xml version="1.0"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">

	<modelVersion>4.0.0</modelVersion>

	<!-- Maven coordinates -->
	<parent>
		<groupId>org.kurento</groupId>
		<artifactId>kurento-qa-pom</artifactId>
		<version>7.0.0-SNAPSHOT</version>
		<relativePath>../qa-pom</relativePath>
	</parent>
	<artifactId>kurento-parent-pom</artifactId>
	<version>7.0.0-SNAPSHOT</version>
	<packaging>pom</packaging>

	<!-- Project-level information -->
	<name>Kurento Parent POM</name>
	<description>
		Parent POM for all Kurento Java projects.
		Provides default properties, version numbers, and build configurations.
	</description>
	<url>https://kurento.openvidu.io/</url>
	<scm>
		<url>https://github.com/Kurento/kurento</url>
		<connection>scm:git:https://github.com/Kurento/kurento.git</connection>
		<developerConnection>scm:git:ssh://github.com/Kurento/kurento.git</developerConnection>
	</scm>

	<!-- Organization-level information -->
	<developers>
		<developer>
			<id>kurento.org</id>
			<name>Kurento Community</name>
			<organization>Kurento</organization>
			<organizationUrl>https://kurento.openvidu.io/</organizationUrl>
		</developer>
	</developers>
	<issueManagement>
		<system>GitHub</system>
		<url>https://github.com/Kurento/kurento/issues</url>
	</issueManagement>
	<licenses>
		<license>
			<name>Apache 2.0</name>
			<url>http://www.apache.org/licenses/LICENSE-2.0</url>
			<distribution>repo</distribution>
		</license>
	</licenses>
	<mailingLists>
		<mailingList>
			<name>Kurento List</name>
			<subscribe>http://groups.google.com/group/kurento/subscribe</subscribe>
			<post>http://groups.google.com/group/kurento/post</post>
			<archive>http://groups.google.com/group/kurento/about</archive>
		</mailingList>
	</mailingLists>
	<organization>
		<name>Kurento</name>
		<url>https://kurento.openvidu.io/</url>
	</organization>

	<!-- Project configuration -->

	<properties>
		<!-- Kurento Media Server API.
		These properties select which version of the Kurento API definition files
		(the .kmd JSON files found in Kurento Media Server modules) will be used.
		It's not critical that these versions coincide with the latest available,
		but whenever an API update is done in those files and released,
		these version numbers should get updated accordingly. -->
		<version.kms-api-core>7.0.0-SNAPSHOT</version.kms-api-core>
		<version.kms-api-elements>7.0.0-SNAPSHOT</version.kms-api-elements>
		<version.kms-api-filters>7.0.0-SNAPSHOT</version.kms-api-filters>

		<!-- Kurento miscellaneous tools -->
		<version.kurento-utils-js>7.0.0-SNAPSHOT</version.kurento-utils-js>
		<version.kurento-maven-plugin>7.0.0-SNAPSHOT</version.kurento-maven-plugin>

		<!-- Kurento Java modules -->
		<version.kurento-java>${project.parent.version}</version.kurento-java>

		<!-- External versions -->
		<webjars-locator.version>0.46</webjars-locator.version>
		<webjars.bootstrap.version>5.2.2</webjars.bootstrap.version>
		<webjars.demo-console.version>1.5.1</webjars.demo-console.version>
		<webjars.draggabilly.version>2.1.0</webjars.draggabilly.version>
		<webjars.ekko-lightbox.version>5.2.0</webjars.ekko-lightbox.version>
		<webjars.event-emitter.version>5.1.0</webjars.event-emitter.version>
		<webjars.jquery.version>3.6.1</webjars.jquery.version>
		<webjars.jsnlog.js.version>2.20.1</webjars.jsnlog.js.version>
		<webjars.webrtc-adapter.version>7.4.0</webjars.webrtc-adapter.version>

		<version.jetty>9.4.49.v20220914</version.jetty>
		<version.netty>4.1.85.Final</version.netty>

		<version.apache.activemq>5.7.0</version.apache.activemq>
		<version.apache.commons-fileupload>1.4</version.apache.commons-fileupload>
		<version.apache.commons-io>2.11.0</version.apache.commons-io>
		<version.apache.commons-lang>3.12.0</version.apache.commons-lang>
		<version.apache.commons-logging>1.2</version.apache.commons-logging>
		<version.apache.commons-net>3.8.0</version.apache.commons-net>
		<version.apache.commons-pool>2.11.1</version.apache.commons-pool>
		<version.apache.fluent-hc>4.5.13</version.apache.fluent-hc>
		<version.apache.httpclient>5.2</version.apache.httpclient>
		<version.apache.httpmime>4.5.13</version.apache.httpmime>
		<version.apache.maven-artifact>3.8.6</version.apache.maven-artifact>
		<version.apache.source.assembly.descriptor>1.0.6</version.apache.source.assembly.descriptor>
		<version.apache.tika>2.6.0</version.apache.tika>
		<version.bcpkix>1.70</version.bcpkix>
		<version.cglib>3.3.0</version.cglib>
		<version.cors-filter>2.10</version.cors-filter>
		<version.spotbugs>4.7.3</version.spotbugs>
		<version.google.gson>2.10</version.google.gson>
		<version.google.guava>31.1-jre</version.google.guava>
		<version.google.http>1.42.3</version.google.http>
		<version.google.oauth>1.34.1</version.google.oauth>
		<version.google.youtube>v3-rev20221108-2.0.0</version.google.youtube>
		<version.keystone-client>3.2.9</version.keystone-client>

		<version.hamcrest>2.2</version.hamcrest>
		<version.javax.inject>1</version.javax.inject>
		<version.junit>4.13.2</version.junit>
		<version.mockito.core>4.9.0</version.mockito.core>
		<version.paranamer>2.8</version.paranamer>
		<version.plexus.io>3.4.0</version.plexus.io>
		<version.powermock>2.0.9</version.powermock>

		<version.reflections>0.10.2</version.reflections>
		<version.scribe>8.3.3</version.scribe>
		<version.servlet-api>6.0.0</version.servlet-api>
		<version.slf4j>1.7.36</version.slf4j>

		<!--
		NOTE: Spring Boot doesn't follow SemVer. Minor version upgrades can break things.
		To update the Spring Boot version, you must:
		1. Follow the upgrade guide from the appropriate Spring Boot Release Notes:
		   https://github.com/spring-projects/spring-boot/wiki#release-notes
		2. Run this command:
		   mvn -Pspring-boot-upgrade -Psnapshot -DskipTests=false clean verify
		3. Fix all broken tests.
		4. Fix all WARN and ERROR messages from `PropertiesMigrationListener`.
		-->
		<version.spring-boot>2.7.6</version.spring-boot>

		<version.websocket-api>1.1</version.websocket-api>

		<!-- Test Dependencies Versions -->
		<ApacheJMeter_core.version>5.5</ApacheJMeter_core.version>
		<assertj.version>3.23.1</assertj.version>
		<docker-java.version>3.2.14</docker-java.version>
		<freemarker.version>2.3.31</freemarker.version>
		<jackson.version>2.14.1</jackson.version>
		<jfreechart.version>1.5.3</jfreechart.version>
		<jmeter-maven-plugin.version>3.6.1</jmeter-maven-plugin.version>

		<jna.version>5.12.1</jna.version>
		<overthere.version>5.3.0</overthere.version>
		<selenium-java.version>3.141.59</selenium-java.version>
		<version.ocr>4.0.0-1.4.4</version.ocr>
		<webdrivermanager.version>5.3.1</webdrivermanager.version>

		<!-- **************** -->
		<!-- Plugins versions -->
		<!-- **************** -->
		<version.antrun.plugin>3.1.0</version.antrun.plugin>
		<version.assembly.plugin>3.4.2</version.assembly.plugin>
		<version.buildhelper.plugin>3.3.0</version.buildhelper.plugin>
		<version.buildnumber.plugin>3.0.0</version.buildnumber.plugin>
		<version.clean.plugin>3.2.0</version.clean.plugin>
		<version.clover2.plugin>4.0.6</version.clover2.plugin>
		<version.cobertura.plugin>2.7</version.cobertura.plugin>
		<version.compiler.plugin>3.10.1</version.compiler.plugin>
		<version.dependency.plugin>3.3.0</version.dependency.plugin>
		<version.eclipse.plugin>2.10</version.eclipse.plugin>
		<version.enforcer.plugin>3.0.0-M3</version.enforcer.plugin>
		<version.enforcer.rules.plugin>1.3</version.enforcer.rules.plugin>
		<version.failsafe.plugin>3.0.0-M7</version.failsafe.plugin>
		<version.gpg.plugin>1.6</version.gpg.plugin>
		<version.help.plugin>3.3.0</version.help.plugin>
		<version.install.plugin>3.1.0</version.install.plugin>
		<version.jar.plugin>3.3.0</version.jar.plugin>
		<version.javadoc.plugin>3.4.1</version.javadoc.plugin>
		<version.javancss.plugin>2.1</version.javancss.plugin>
		<version.jdepend.plugin>2.0</version.jdepend.plugin>
		<version.jxr.plugin>3.3.0</version.jxr.plugin>
		<version.license.plugin>2.0.0</version.license.plugin>
		<version.pir.plugin>3.4.1</version.pir.plugin>		<!-- maven-project-info-reports-plugins -->
		<version.resources.plugin>3.3.0</version.resources.plugin>
		<version.shade.plugin>3.4.1</version.shade.plugin>
		<version.shell.plugin>1.0-beta-1</version.shell.plugin>
		<version.sonar.plugin>3.9.1.2184</version.sonar.plugin>
		<version.source.plugin>3.2.1</version.source.plugin>
		<version.surefire.plugin>3.0.0-M7</version.surefire.plugin>
		<version.war.plugin>3.3.2</version.war.plugin>

		<!-- ************** -->
		<!-- Build settings -->
		<!-- ************** -->

		<!-- Cross plugins settings -->
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>

		<!-- maven-compiler-plugin -->
		<!-- REVIEW: Starting from Java-9, change to use the new <release> parameter. -->
		<maven.compiler.target>1.8</maven.compiler.target>
		<maven.compiler.source>1.8</maven.compiler.source>

		<!-- Options to override the compiler arguments directly on the compiler
		argument line, to separate between what the IDE understands as the source level
		and what the Maven compiler actually uses. -->
		<maven.compiler.argument.target>${maven.compiler.target}</maven.compiler.argument.target>
		<maven.compiler.argument.source>${maven.compiler.source}</maven.compiler.argument.source>

		<!-- maven-enforcer-plugin -->
		<maven.min.version>3.0.3</maven.min.version>
		<jdk.min.version>${maven.compiler.source}</jdk.min.version>
		<jdk.max.version>${maven.compiler.source}</jdk.max.version>

		<!-- maven-eclipse-plugin -->
		<downloadSources>true</downloadSources>
		<downloadJavadocs>true</downloadJavadocs>

		<!-- maven-assembly-plugin -->
		<sourceReleaseAssemblyDescriptor>source-release</sourceReleaseAssemblyDescriptor>
	</properties>

	<dependencyManagement>
		<dependencies>

			<!-- Kurento Media Server API -->
			<dependency>
				<groupId>org.kurento</groupId>
				<artifactId>kms-api-core</artifactId>
				<version>${version.kms-api-core}</version>
			</dependency>
			<dependency>
				<groupId>org.kurento</groupId>
				<artifactId>kms-api-elements</artifactId>
				<version>${version.kms-api-elements}</version>
			</dependency>
			<dependency>
				<groupId>org.kurento</groupId>
				<artifactId>kms-api-filters</artifactId>
				<version>${version.kms-api-filters}</version>
			</dependency>

			<!-- Kurento miscellaneous tools -->
			<dependency>
				<groupId>org.kurento</groupId>
				<artifactId>kurento-utils-js</artifactId>
				<version>${version.kurento-utils-js}</version>
			</dependency>

			<!-- Kurento Java modules -->
			<dependency>
				<groupId>org.kurento</groupId>
				<artifactId>kurento-commons</artifactId>
				<version>${version.kurento-java}</version>
			</dependency>
			<dependency>
				<groupId>org.kurento</groupId>
				<artifactId>kurento-client</artifactId>
				<version>${version.kurento-java}</version>
			</dependency>
			<dependency>
				<groupId>org.kurento</groupId>
				<artifactId>kurento-jsonrpc</artifactId>
				<version>${version.kurento-java}</version>
				<type>pom</type>
			</dependency>
			<dependency>
				<groupId>org.kurento</groupId>
				<artifactId>kurento-jsonrpc-client</artifactId>
				<version>${version.kurento-java}</version>
			</dependency>
			<dependency>
				<groupId>org.kurento</groupId>
				<artifactId>kurento-jsonrpc-client-jetty</artifactId>
				<version>${version.kurento-java}</version>
			</dependency>
			<dependency>
				<groupId>org.kurento</groupId>
				<artifactId>kurento-jsonrpc-server</artifactId>
				<version>${version.kurento-java}</version>
			</dependency>
			<dependency>
				<groupId>org.kurento</groupId>
				<artifactId>kurento-test</artifactId>
				<version>${version.kurento-java}</version>
			</dependency>

			<!-- Webjars -->
			<dependency>
				<groupId>org.webjars</groupId>
				<artifactId>webjars-locator</artifactId>
				<version>${webjars-locator.version}</version>
			</dependency>
			<dependency>
				<groupId>org.webjars.bower</groupId>
				<artifactId>bootstrap</artifactId>
				<version>${webjars.bootstrap.version}</version>
			</dependency>
			<dependency>
				<groupId>org.webjars</groupId>
				<artifactId>draggabilly</artifactId>
				<version>${webjars.draggabilly.version}</version>
			</dependency>
			<dependency>
				<groupId>org.webjars.bower</groupId>
				<artifactId>demo-console</artifactId>
				<version>${webjars.demo-console.version}</version>
			</dependency>
			<dependency>
				<groupId>org.webjars.bower</groupId>
				<artifactId>webrtc-adapter</artifactId>
				<version>${webjars.webrtc-adapter.version}</version>
			</dependency>
			<dependency>
				<groupId>org.webjars.bower</groupId>
				<artifactId>jquery</artifactId>
				<version>${webjars.jquery.version}</version>
			</dependency>
			<dependency>
				<groupId>org.webjars.bower</groupId>
				<artifactId>ekko-lightbox</artifactId>
				<version>${webjars.ekko-lightbox.version}</version>
			</dependency>
			<dependency>
				<groupId>org.webjars.bower</groupId>
				<artifactId>EventEmitter.js</artifactId>
				<version>${webjars.event-emitter.version}</version>
			</dependency>
			<dependency>
				<groupId>org.webjars.bower</groupId>
				<artifactId>jsnlog.js</artifactId>
				<version>${webjars.jsnlog.js.version}</version>
			</dependency>
			<!-- Netty -->
			<dependency>
				<groupId>io.netty</groupId>
				<artifactId>netty-handler</artifactId>
				<version>${version.netty}</version>
			</dependency>
			<dependency>
				<groupId>io.netty</groupId>
				<artifactId>netty-transport</artifactId>
				<version>${version.netty}</version>
			</dependency>
			<dependency>
				<groupId>io.netty</groupId>
				<artifactId>netty-handler-proxy</artifactId>
				<version>${version.netty}</version>
			</dependency>
			<dependency>
				<groupId>io.netty</groupId>
				<artifactId>netty-buffer</artifactId>
				<version>${version.netty}</version>
			</dependency>
			<dependency>
				<groupId>io.netty</groupId>
				<artifactId>netty-common</artifactId>
				<version>${version.netty}</version>
			</dependency>
			<dependency>
				<groupId>io.netty</groupId>
				<artifactId>netty-codec</artifactId>
				<version>${version.netty}</version>
			</dependency>
			<dependency>
				<groupId>io.netty</groupId>
				<artifactId>netty-codec-http</artifactId>
				<version>${version.netty}</version>
			</dependency>
			<!-- Other dependencies -->
			<dependency>
				<groupId>org.bouncycastle</groupId>
				<artifactId>bcpkix-jdk15on</artifactId>
				<version>${version.bcpkix}</version>
			</dependency>
			<dependency>
				<groupId>org.bouncycastle</groupId>
				<artifactId>bcprov-jdk15on</artifactId>
				<version>${version.bcpkix}</version>
			</dependency>
			<dependency>
				<groupId>com.thoughtworks.paranamer</groupId>
				<artifactId>paranamer</artifactId>
				<version>${version.paranamer}</version>
			</dependency>
			<dependency>
				<groupId>javax.inject</groupId>
				<artifactId>javax.inject</artifactId>
				<version>${version.javax.inject}</version>
			</dependency>
			<dependency>
				<groupId>com.woorea</groupId>
				<artifactId>keystone-client</artifactId>
				<version>${version.keystone-client}</version>
			</dependency>
			<dependency>
				<groupId>com.woorea</groupId>
				<artifactId>jersey-connector</artifactId>
				<version>${version.keystone-client}</version>
			</dependency>
			<dependency>
				<groupId>com.woorea</groupId>
				<artifactId>jersey2-connector</artifactId>
				<version>${version.keystone-client}</version>
			</dependency>
			<dependency>
				<groupId>com.woorea</groupId>
				<artifactId>resteasy-connector</artifactId>
				<version>${version.keystone-client}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.commons</groupId>
				<artifactId>commons-pool2</artifactId>
				<version>${version.apache.commons-pool}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.maven</groupId>
				<artifactId>maven-artifact</artifactId>
				<version>${version.apache.maven-artifact}</version>
			</dependency>
			<dependency>
				<groupId>commons-logging</groupId>
				<artifactId>commons-logging</artifactId>
				<version>${version.apache.commons-logging}</version>
			</dependency>
			<dependency>
				<groupId>commons-net</groupId>
				<artifactId>commons-net</artifactId>
				<version>${version.apache.commons-net}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.commons</groupId>
				<artifactId>commons-logging-api</artifactId>
				<version>${version.apache.commons-logging}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.commons</groupId>
				<artifactId>commons-net</artifactId>
				<version>${version.apache.commons-net}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.tika</groupId>
				<artifactId>tika-core</artifactId>
				<version>${version.apache.tika}</version>
			</dependency>
			<dependency>
				<groupId>jakarta.servlet</groupId>
				<artifactId>jakarta.servlet-api</artifactId>
				<version>${version.servlet-api}</version>
				<scope>provided</scope>
			</dependency>
			<dependency>
				<groupId>org.reflections</groupId>
				<artifactId>reflections</artifactId>
				<version>${version.reflections}</version>
			</dependency>
			<dependency>
				<groupId>org.hamcrest</groupId>
				<artifactId>hamcrest-core</artifactId>
				<version>${version.hamcrest}</version>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>org.hamcrest</groupId>
				<artifactId>hamcrest</artifactId>
				<version>${version.hamcrest}</version>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>junit</groupId>
				<artifactId>junit</artifactId>
				<version>${version.junit}</version>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>cglib</groupId>
				<artifactId>cglib</artifactId>
				<version>${version.cglib}</version>
			</dependency>
			<dependency>
				<groupId>org.slf4j</groupId>
				<artifactId>slf4j-api</artifactId>
				<version>${version.slf4j}</version>
			</dependency>
			<dependency>
				<groupId>org.slf4j</groupId>
				<artifactId>slf4j-simple</artifactId>
				<version>${version.slf4j}</version>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>javax.websocket</groupId>
				<artifactId>javax.websocket-api</artifactId>
				<version>${version.websocket-api}</version>
			</dependency>

			<!--
			Import dependency management from Spring Boot.
			Individual dependencies can be overriden by specifying them *before* this entry.
			Doc:
			* https://docs.spring.io/spring-boot/docs/current/maven-plugin/reference/htmlsingle/#using.import
			-->
			<dependency>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-dependencies</artifactId>
				<version>${version.spring-boot}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>

			<dependency>
				<groupId>org.apache.activemq</groupId>
				<artifactId>activemq-core</artifactId>
				<version>${version.apache.activemq}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.apache.resources</groupId>
				<artifactId>apache-source-release-assembly-descriptor</artifactId>
				<version>${version.apache.source.assembly.descriptor}</version>
			</dependency>
			<dependency>
				<groupId>com.github.scribejava</groupId>
				<artifactId>scribejava-apis</artifactId>
				<version>${version.scribe}</version>
				<scope>runtime</scope>
			</dependency>
			<dependency>
				<groupId>com.google.code.gson</groupId>
				<artifactId>gson</artifactId>
				<version>${version.google.gson}</version>
			</dependency>
			<dependency>
				<groupId>com.google.guava</groupId>
				<artifactId>guava</artifactId>
				<version>${version.google.guava}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.httpcomponents.client5</groupId>
				<artifactId>httpclient5</artifactId>
				<version>${version.apache.httpclient}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.httpcomponents.core5</groupId>
				<artifactId>httpcore5</artifactId>
				<version>${version.apache.httpclient}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.httpcomponents</groupId>
				<artifactId>httpmime</artifactId>
				<version>${version.apache.httpmime}</version>
			</dependency>
			<dependency>
				<groupId>commons-fileupload</groupId>
				<artifactId>commons-fileupload</artifactId>
				<version>${version.apache.commons-fileupload}</version>
			</dependency>
			<dependency>
				<groupId>commons-io</groupId>
				<artifactId>commons-io</artifactId>
				<version>${version.apache.commons-io}</version>
			</dependency>
			<dependency>
				<groupId>commons-lang</groupId>
				<artifactId>commons-lang3</artifactId>
				<version>${version.apache.commons-lang}</version>
			</dependency>
			<dependency>
				<groupId>com.thetransactioncompany</groupId>
				<artifactId>cors-filter</artifactId>
				<version>${version.cors-filter}</version>
			</dependency>
			<dependency>
				<groupId>com.google.apis</groupId>
				<artifactId>google-api-services-youtube</artifactId>
				<version>${version.google.youtube}</version>
			</dependency>
			<dependency>
				<groupId>com.google.http-client</groupId>
				<artifactId>google-http-client-jackson2</artifactId>
				<version>${version.google.http}</version>
			</dependency>
			<dependency>
				<groupId>com.google.oauth-client</groupId>
				<artifactId>google-oauth-client-jetty</artifactId>
				<version>${version.google.oauth}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.httpcomponents</groupId>
				<artifactId>fluent-hc</artifactId>
				<version>${version.apache.fluent-hc}</version>
			</dependency>
			<dependency>
				<groupId>org.eclipse.jetty.websocket</groupId>
				<artifactId>websocket-client</artifactId>
				<version>${version.jetty}</version>
			</dependency>
			<dependency>
				<groupId>org.eclipse.jetty</groupId>
				<artifactId>jetty-io</artifactId>
				<version>${version.jetty}</version>
			</dependency>
			<dependency>
				<groupId>org.eclipse.jetty</groupId>
				<artifactId>jetty-util</artifactId>
				<version>${version.jetty}</version>
			</dependency>
			<dependency>
				<groupId>org.assertj</groupId>
				<artifactId>assertj-core</artifactId>
				<version>${assertj.version}</version>
			</dependency>
			<dependency>
				<groupId>org.mockito</groupId>
				<artifactId>mockito-core</artifactId>
				<version>${version.mockito.core}</version>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>org.powermock</groupId>
				<artifactId>powermock-api-mockito2</artifactId>
				<version>${version.powermock}</version>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>org.powermock</groupId>
				<artifactId>powermock-module-junit4</artifactId>
				<version>${version.powermock}</version>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>org.seleniumhq.selenium</groupId>
				<artifactId>selenium-java</artifactId>
				<version>${selenium-java.version}</version>
			</dependency>
			<dependency>
				<groupId>org.seleniumhq.selenium</groupId>
				<artifactId>selenium-api</artifactId>
				<version>${selenium-java.version}</version>
			</dependency>
			<dependency>
				<groupId>org.seleniumhq.selenium</groupId>
				<artifactId>selenium-remote-driver</artifactId>
				<version>${selenium-java.version}</version>
			</dependency>
			<dependency>
				<groupId>org.seleniumhq.selenium</groupId>
				<artifactId>selenium-chrome-driver</artifactId>
				<version>${selenium-java.version}</version>
			</dependency>
			<dependency>
				<groupId>org.seleniumhq.selenium</groupId>
				<artifactId>selenium-firefox-driver</artifactId>
				<version>${selenium-java.version}</version>
			</dependency>
			<dependency>
				<groupId>org.seleniumhq.selenium</groupId>
				<artifactId>selenium-opera-driver</artifactId>
				<version>${selenium-java.version}</version>
			</dependency>
			<dependency>
				<groupId>org.seleniumhq.selenium</groupId>
				<artifactId>selenium-ie-driver</artifactId>
				<version>${selenium-java.version}</version>
			</dependency>
			<dependency>
				<groupId>org.seleniumhq.selenium</groupId>
				<artifactId>selenium-edge-driver</artifactId>
				<version>${selenium-java.version}</version>
			</dependency>
			<dependency>
				<groupId>org.seleniumhq.selenium</groupId>
				<artifactId>selenium-safari-driver</artifactId>
				<version>${selenium-java.version}</version>
			</dependency>
			<dependency>
				<groupId>org.seleniumhq.selenium</groupId>
				<artifactId>selenium-support</artifactId>
				<version>${selenium-java.version}</version>
			</dependency>
			<dependency>
				<groupId>org.seleniumhq.selenium</groupId>
				<artifactId>selenium-server</artifactId>
				<version>${selenium-java.version}</version>
			</dependency>
			<dependency>
				<groupId>io.github.bonigarcia</groupId>
				<artifactId>webdrivermanager</artifactId>
				<version>${webdrivermanager.version}</version>
			</dependency>
			<dependency>
				<groupId>com.lazerycode.jmeter</groupId>
				<artifactId>jmeter-maven-plugin</artifactId>
				<version>${jmeter-maven-plugin.version}</version>
			</dependency>
			<dependency>
				<groupId>com.thoughtworks.xstream</groupId>
				<artifactId>xstream</artifactId>
				<version>1.4.19</version>
			</dependency>
			<dependency>
				<groupId>org.codehaus.groovy</groupId>
				<artifactId>groovy-all</artifactId>
				<version>2.4.6</version>
			</dependency>
			<dependency>
				<groupId>org.apache.commons</groupId>
				<artifactId>commons-compress</artifactId>
				<version>[1.19,)</version>
			</dependency>
			<dependency>
				<groupId>com.healthmarketscience.jackcess</groupId>
				<artifactId>jackcess</artifactId>
				<version>2.1.2</version>
			</dependency>
			<dependency>
				<groupId>org.apache.jmeter</groupId>
				<artifactId>ApacheJMeter_core</artifactId>
				<version>${ApacheJMeter_core.version}</version>
			</dependency>
			<dependency>
				<groupId>org.freemarker</groupId>
				<artifactId>freemarker</artifactId>
				<version>${freemarker.version}</version>
			</dependency>
			<dependency>
				<groupId>com.xebialabs.overthere</groupId>
				<artifactId>overthere</artifactId>
				<version>${overthere.version}</version>
			</dependency>
			<dependency>
				<groupId>org.jfree</groupId>
				<artifactId>jfreechart</artifactId>
				<version>${jfreechart.version}</version>
			</dependency>
			<dependency>
				<groupId>com.github.docker-java</groupId>
				<artifactId>docker-java</artifactId>
				<version>${docker-java.version}</version>
			</dependency>
			<dependency>
				<groupId>com.fasterxml.jackson.jaxrs</groupId>
				<artifactId>jackson-jaxrs-json-provider</artifactId>
				<version>${jackson.version}</version>
			</dependency>
			<dependency>
				<groupId>org.bytedeco.javacpp-presets</groupId>
				<artifactId>tesseract</artifactId>
				<version>${version.ocr}</version>
			</dependency>
			<dependency>
				<groupId>com.github.spotbugs</groupId>
				<artifactId>spotbugs-annotations</artifactId>
				<version>${version.spotbugs}</version>
			</dependency>
			<dependency>
				<groupId>net.java.dev.jna</groupId>
				<artifactId>jna</artifactId>
				<version>${jna.version}</version>
			</dependency>
		</dependencies>
	</dependencyManagement>

	<build>
		<pluginManagement>
			<!-- All plugins ordered by shortname (antrun, assembly ...) -->
			<plugins>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-antrun-plugin</artifactId>
					<version>${version.antrun.plugin}</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-assembly-plugin</artifactId>
					<version>${version.assembly.plugin}</version>
					<configuration>
						<archive>
							<index>true</index>
							<manifest>
								<addDefaultSpecificationEntries>
									true
								</addDefaultSpecificationEntries>
								<addDefaultImplementationEntries>
									true
								</addDefaultImplementationEntries>
							</manifest>
							<manifestEntries>
								<Implementation-URL>${project.url}</Implementation-URL>
								<Java-Version>${java.version}</Java-Version>
								<Java-Vendor>${java.vendor}</Java-Vendor>
								<Os-Name>${os.name}</Os-Name>
								<Os-Arch>${os.arch}</Os-Arch>
								<Os-Version>${os.version}</Os-Version>
								<Scm-Url>${project.scm.url}</Scm-Url>
								<Scm-Connection>${project.scm.connection}</Scm-Connection>
								<Scm-Revision>${buildNumber}</Scm-Revision>
								<Build-Timestamp>${build.datetime}</Build-Timestamp>
							</manifestEntries>
						</archive>
					</configuration>
				</plugin>
				<plugin>
					<groupId>org.codehaus.mojo</groupId>
					<artifactId>build-helper-maven-plugin</artifactId>
					<version>${version.buildhelper.plugin}</version>
				</plugin>
				<plugin>
					<groupId>org.codehaus.mojo</groupId>
					<artifactId>buildnumber-maven-plugin</artifactId>
					<version>${version.buildnumber.plugin}</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-clean-plugin</artifactId>
					<version>${version.clean.plugin}</version>
				</plugin>
				<plugin>
					<groupId>com.atlassian.maven.plugins</groupId>
					<artifactId>maven-clover2-plugin</artifactId>
					<version>${version.clover2.plugin}</version>
				</plugin>
				<plugin>
					<groupId>org.codehaus.mojo</groupId>
					<artifactId>cobertura-maven-plugin</artifactId>
					<version>${version.cobertura.plugin}</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-compiler-plugin</artifactId>
					<version>${version.compiler.plugin}</version>
					<configuration>
						<showDeprecation>true</showDeprecation>
						<showWarnings>true</showWarnings>
						<source>${maven.compiler.argument.source}</source>
						<target>${maven.compiler.argument.target}</target>
					</configuration>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-dependency-plugin</artifactId>
					<version>${version.dependency.plugin}</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-eclipse-plugin</artifactId>
					<version>${version.eclipse.plugin}</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-enforcer-plugin</artifactId>
					<version>${version.enforcer.plugin}</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-failsafe-plugin</artifactId>
					<version>${version.failsafe.plugin}</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-gpg-plugin</artifactId>
					<version>${version.gpg.plugin}</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-help-plugin</artifactId>
					<version>${version.help.plugin}</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-install-plugin</artifactId>
					<version>${version.install.plugin}</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-jar-plugin</artifactId>
					<version>${version.jar.plugin}</version>
					<configuration>
						<archive>
							<index>true</index>
							<manifest>
								<addDefaultSpecificationEntries>
									true
								</addDefaultSpecificationEntries>
								<addDefaultImplementationEntries>
									true
								</addDefaultImplementationEntries>
							</manifest>
							<manifestEntries>
								<Implementation-URL>${project.url}</Implementation-URL>
								<Java-Version>${java.version}</Java-Version>
								<Java-Vendor>${java.vendor}</Java-Vendor>
								<Os-Name>${os.name}</Os-Name>
								<Os-Arch>${os.arch}</Os-Arch>
								<Os-Version>${os.version}</Os-Version>
								<Scm-Url>${project.scm.url}</Scm-Url>
								<Scm-Connection>${project.scm.connection}</Scm-Connection>
								<Scm-Revision>${buildNumber}</Scm-Revision>
								<Build-Timestamp>${build.datetime}</Build-Timestamp>
							</manifestEntries>
						</archive>
					</configuration>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-javadoc-plugin</artifactId>
					<version>${version.javadoc.plugin}</version>
					<configuration>
						<notimestamp>true</notimestamp>
						<doctitle>${project.name} API</doctitle>
						<windowtitle>${project.name} API</windowtitle>
						<header><![CDATA[<b>${project.name} ${version.kurento-java}</b>]]></header>
						<footer><![CDATA[<b>${project.name} ${version.kurento-java}</b>]]></footer>
						<archive>
							<index>true</index>
							<manifest>
								<addDefaultSpecificationEntries>
									true
								</addDefaultSpecificationEntries>
								<addDefaultImplementationEntries>
									true
								</addDefaultImplementationEntries>
							</manifest>
							<manifestEntries>
								<Implementation-URL>${project.url}</Implementation-URL>
								<Java-Version>${java.version}</Java-Version>
								<Java-Vendor>${java.vendor}</Java-Vendor>
								<Os-Name>${os.name}</Os-Name>
								<Os-Arch>${os.arch}</Os-Arch>
								<Os-Version>${os.version}</Os-Version>
								<Scm-Url>${project.scm.url}</Scm-Url>
								<Scm-Connection>${project.scm.connection}</Scm-Connection>
								<Scm-Revision>${buildNumber}</Scm-Revision>
								<Build-Timestamp>${build.datetime}</Build-Timestamp>
							</manifestEntries>
						</archive>
						<additionalparam>${javadoc.opts}</additionalparam>
					</configuration>
				</plugin>
				<plugin>
					<groupId>org.codehaus.mojo</groupId>
					<artifactId>javancss-maven-plugin</artifactId>
					<version>${version.javancss.plugin}</version>
				</plugin>
				<plugin>
					<groupId>org.codehaus.mojo</groupId>
					<artifactId>jdepend-maven-plugin</artifactId>
					<version>${version.jdepend.plugin}</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-jxr-plugin</artifactId>
					<version>${version.jxr.plugin}</version>
				</plugin>
				<plugin>
					<groupId>org.codehaus.mojo</groupId>
					<artifactId>license-maven-plugin</artifactId>
					<version>${version.license.plugin}</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-project-info-reports-plugin</artifactId>
					<version>${version.pir.plugin}</version>
					<configuration>
						<dependencyLocationEnabled>false</dependencyLocationEnabled>
					</configuration>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-resources-plugin</artifactId>
					<version>${version.resources.plugin}</version>
					<configuration>
						<propertiesEncoding>${project.build.sourceEncoding}</propertiesEncoding>
					</configuration>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-shade-plugin</artifactId>
					<version>${version.shade.plugin}</version>
				</plugin>
				<plugin>
					<groupId>org.codehaus.mojo</groupId>
					<artifactId>shell-maven-plugin</artifactId>
					<version>${version.shell.plugin}</version>
				</plugin>
				<plugin>
					<groupId>org.sonarsource.scanner.maven</groupId>
					<artifactId>sonar-maven-plugin</artifactId>
					<version>${version.sonar.plugin}</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-source-plugin</artifactId>
					<version>${version.source.plugin}</version>
					<executions>
						<execution>
							<id>attach-sources</id>
							<phase>package</phase>
							<goals>
								<!-- produce source artifact for main project sources -->
								<goal>jar-no-fork</goal>
							</goals>
						</execution>
					</executions>
					<configuration>
						<archive>
							<index>true</index>
							<manifest>
								<addDefaultSpecificationEntries>
									true
								</addDefaultSpecificationEntries>
								<addDefaultImplementationEntries>
									true
								</addDefaultImplementationEntries>
							</manifest>
							<manifestEntries>
								<Implementation-URL>${project.url}</Implementation-URL>
								<Java-Version>${java.version}</Java-Version>
								<Java-Vendor>${java.vendor}</Java-Vendor>
								<Os-Name>${os.name}</Os-Name>
								<Os-Arch>${os.arch}</Os-Arch>
								<Os-Version>${os.version}</Os-Version>
								<Scm-Url>${project.scm.url}</Scm-Url>
								<Scm-Connection>${project.scm.connection}</Scm-Connection>
								<Scm-Revision>${buildNumber}</Scm-Revision>
								<Build-Timestamp>${build.datetime}</Build-Timestamp>
							</manifestEntries>
						</archive>
					</configuration>
					<dependencies>
						<dependency>
							<groupId>org.codehaus.plexus</groupId>
							<artifactId>plexus-io</artifactId>
							<version>${version.plexus.io}</version>
						</dependency>
					</dependencies>
				</plugin>
				<plugin>
					<groupId>org.springframework.boot</groupId>
					<artifactId>spring-boot-maven-plugin</artifactId>
					<version>${version.spring-boot}</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-surefire-plugin</artifactId>
					<version>${version.surefire.plugin}</version>
					<configuration>
						<systemProperties>
							<java.io.tmpdir>${project.build.directory}</java.io.tmpdir>
						</systemProperties>
					</configuration>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-war-plugin</artifactId>
					<version>${version.war.plugin}</version>
				</plugin>
			</plugins>
		</pluginManagement>

		<plugins>
			<!-- Check for the minimum version of Java and Maven.
			Runs during the validate phase. -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-enforcer-plugin</artifactId>
				<executions>
					<execution>
						<id>enforce-java-version</id>
						<goals>
							<goal>enforce</goal>
						</goals>
						<configuration>
							<rules>
								<requireJavaVersion>
									<message>To build this project, JDK ${jdk.min.version} (or greater) is required. Please install it.</message>
									<version>${jdk.min.version}</version>
								</requireJavaVersion>
							</rules>
						</configuration>
					</execution>
					<execution>
						<id>enforce-maven-version</id>
						<goals>
							<goal>enforce</goal>
						</goals>
						<configuration>
							<rules>
								<requireMavenVersion>
									<message>To build this project, Maven ${maven.min.version} (or greater) is required. Please install it.</message>
									<version>${maven.min.version}</version>
								</requireMavenVersion>
							</rules>
						</configuration>
					</execution>
					<execution>
						<id>enforce-bytecode-version</id>
						<goals>
							<goal>enforce</goal>
						</goals>
						<configuration>
							<rules>
								<enforceBytecodeVersion>
									<maxJdkVersion>${jdk.max.version}</maxJdkVersion>
								</enforceBytecodeVersion>
							</rules>
							<fail>true</fail>
						</configuration>
					</execution>
					<execution>
						<id>enforce-ban-duplicate-classes</id>
						<goals>
							<goal>enforce</goal>
						</goals>
						<configuration>
							<rules>
								<banDuplicateClasses>
									<findAllDuplicates>true</findAllDuplicates>
								</banDuplicateClasses>
							</rules>
							<fail>false</fail>
						</configuration>
					</execution>
					<execution>
						<id>enforce-ban-circular-dependencies</id>
						<goals>
							<goal>enforce</goal>
						</goals>
						<configuration>
							<rules>
								<banCircularDependencies/>
							</rules>
							<fail>true</fail>
						</configuration>
					</execution>
				</executions>
				<dependencies>
					<dependency>
						<groupId>org.codehaus.mojo</groupId>
						<artifactId>extra-enforcer-rules</artifactId>
						<version>${version.enforcer.rules.plugin}</version>
					</dependency>
				</dependencies>
			</plugin>

			<!-- Set properties containing the scm revision and build timestamp -->
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>buildnumber-maven-plugin</artifactId>
				<executions>
					<execution>
						<id>get-build-timestamp</id>
						<phase>initialize</phase>
						<goals>
							<goal>create-timestamp</goal>
						</goals>
						<configuration>
							<!-- Example date: Wed, 4 Jul 2001 12:08:56 -0700 -->
							<timestampFormat>EEE, d MMM yyyy HH:mm:ss Z</timestampFormat>
							<timestampPropertyName>build.datetime</timestampPropertyName>
						</configuration>
					</execution>
					<execution>
						<id>get-scm-revision</id>
						<phase>initialize</phase>
						<goals>
							<goal>create</goal>
						</goals>
						<configuration>
							<doCheck>false</doCheck>
							<doUpdate>false</doUpdate>
							<revisionOnScmFailure>UNKNOWN</revisionOnScmFailure>
							<getRevisionOnlyOnce>true</getRevisionOnlyOnce>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<!-- Attach source jar to all builds. Runs during the package phase. -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-source-plugin</artifactId>
			</plugin>
		</plugins>
	</build>

	<profiles>
		<!-- This profile must be manually activated for deploying releases -->
		<profile>
			<id>kurento-release</id>
			<build>
				<plugins>
					<!-- Create a source-release artifact that contains the fully buildable
					project directory source structure. This should be released to the Maven
					repository for each JBoss project release. -->
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-assembly-plugin</artifactId>
						<dependencies>
							<dependency>
								<groupId>org.apache.apache.resources</groupId>
								<artifactId>apache-source-release-assembly-descriptor</artifactId>
								<version>${version.apache.source.assembly.descriptor}</version>
							</dependency>
						</dependencies>
						<executions>
							<execution>
								<id>source-release-assembly</id>
								<phase>package</phase>
								<goals>
									<goal>single</goal>
								</goals>
								<configuration>
									<runOnlyAtExecutionRoot>true</runOnlyAtExecutionRoot>
									<descriptorRefs>
										<descriptorRef>${sourceReleaseAssemblyDescriptor}</descriptorRef>
									</descriptorRefs>
									<tarLongFileFormat>gnu</tarLongFileFormat>
								</configuration>
							</execution>
						</executions>
					</plugin>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-javadoc-plugin</artifactId>
						<executions>
							<execution>
								<id>attach-javadocs</id>
								<goals>
									<goal>jar</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-enforcer-plugin</artifactId>
						<executions>
							<!-- Make sure that only non-snapshot versions are used
							across the project -->
							<execution>
								<id>enforce-no-snapshots</id>
								<goals>
									<goal>enforce</goal>
								</goals>
								<configuration>
									<rules>
										<requireReleaseDeps>
											<message>SNAPSHOT versions not allowed for dependencies!</message>
										</requireReleaseDeps>
										<requireReleaseVersion>
											<message>SNAPSHOT versions not allowed for projects!</message>
										</requireReleaseVersion>
									</rules>
									<fail>true</fail>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>

		<!-- Profile to allow generating javadoc in both Java 7 & 8 environments -->
		<profile>
			<id>doclint-java8-disable</id>
			<activation>
				<jdk>[1.8,)</jdk>
			</activation>
			<properties>
				<javadoc.opts>-Xdoclint:none</javadoc.opts>
			</properties>
		</profile>

		<!-- Profile to aid upgrading Spring Boot to newer versions. -->
		<profile>
			<id>spring-boot-upgrade</id>
			<dependencies>
				<!--
				Migrator tool for upgrading to a new Spring Boot feature release.
				Doc:
				* https://docs.spring.io/spring-boot/docs/current/reference/html/upgrading.html#upgrading.to-feature
				* https://www.baeldung.com/spring-boot-properties-migrator
				-->
				<dependency>
					<groupId>org.springframework.boot</groupId>
					<artifactId>spring-boot-properties-migrator</artifactId>
					<scope>runtime</scope>
				</dependency>
			</dependencies>
		</profile>

		<!-- This profile can be activated to generate gpg signatures for all build
		artifacts. This profile requires that the properties "gpg.keyname" and "gpg.passphrase"
		are available to the current build. -->
		<profile>
			<id>gpg-sign</id>
			<build>
				<plugins>
					<!-- This will sign the artifact, the POM, and all attached artifacts -->
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-gpg-plugin</artifactId>
						<configuration>
							<useAgent>true</useAgent>
						</configuration>
						<executions>
							<execution>
								<id>sign-artifacts</id>
								<phase>verify</phase>
								<goals>
									<goal>sign</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
		<!-- This profile enables usage of the Eclipse "lifecycle-mapping" plugin.
		This plugin is not released on Maven Central, so it won't be available
		outside the Eclipse IDE. See:
		https://stackoverflow.com/questions/7905501/get-rid-of-pom-not-found-warning-for-org-eclipse-m2elifecycle-mapping/
		-->
		<profile>
			<id>eclipse-ide</id>
			<activation>
				<property>
					<name>m2e.version</name>
				</property>
			</activation>
			<build>
				<pluginManagement>
					<plugins>
						<plugin>
							<groupId>org.eclipse.m2e</groupId>
							<artifactId>lifecycle-mapping</artifactId>
							<version>1.0.0</version>
							<configuration>
								<lifecycleMappingMetadata>
									<pluginExecutions>
										<!-- Configure m2e to execute the manifest goal
										of the bundle plugin, if present. -->
										<pluginExecution>
											<pluginExecutionFilter>
												<groupId>org.apache.felix</groupId>
												<artifactId>maven-bundle-plugin</artifactId>
												<versionRange>[2.3.7,)</versionRange>
												<goals>
													<goal>manifest</goal>
												</goals>
											</pluginExecutionFilter>
											<action>
												<execute/>
											</action>
										</pluginExecution>
										<!-- Configure m2e to ignore the Maven enforcer plugin -->
										<pluginExecution>
											<pluginExecutionFilter>
												<groupId>org.apache.maven.plugins</groupId>
												<artifactId>maven-enforcer-plugin</artifactId>
												<versionRange>[1.0,)</versionRange>
												<goals>
													<goal>enforce</goal>
												</goals>
											</pluginExecutionFilter>
											<action>
												<ignore/>
											</action>
										</pluginExecution>
										<pluginExecution>
											<pluginExecutionFilter>
												<groupId>org.apache.maven.plugins</groupId>
												<artifactId>maven-dependency-plugin</artifactId>
												<versionRange>[2.8,)</versionRange>
												<goals>
													<goal>unpack</goal>
												</goals>
											</pluginExecutionFilter>
											<action>
												<ignore/>
											</action>
										</pluginExecution>
										<!-- Configure m2e to ignore the buildnumber-maven-plugin -->
										<pluginExecution>
											<pluginExecutionFilter>
												<groupId>org.codehaus.mojo</groupId>
												<artifactId>buildnumber-maven-plugin</artifactId>
												<versionRange>[1.0.0,)</versionRange>
												<goals>
													<goal>create</goal>
													<goal>create-timestamp</goal>
												</goals>
											</pluginExecutionFilter>
											<action>
												<ignore/>
											</action>
										</pluginExecution>
									</pluginExecutions>
								</lifecycleMappingMetadata>
							</configuration>
						</plugin>
					</plugins>
				</pluginManagement>
			</build>
		</profile>
	</profiles>

	<!--
	Kurento projects don't define a <distributionManagement> section with the
	repositories used for deployment. Instead, CI injects a `settings.xml` file
	with a "deploy" profile that configures maven-deploy-plugin through properties
	`altSnapshotDeploymentRepository` and `altReleaseDeploymentRepository`.
	Refer to Jenkins Managed File "Kurento GitHub Maven settings.xml".
	<distributionManagement></distributionManagement>
	-->

</project>
